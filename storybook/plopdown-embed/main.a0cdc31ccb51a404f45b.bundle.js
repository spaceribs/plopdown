(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1640:function(module,exports,__webpack_require__){var map={"./plopdown-embed.story.mdx":1641};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1640},1641:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(2);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(52),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(150);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}const layoutProps={};function MDXContent({components:components,...props}){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_2__.Meta,{title:"Intro",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("h1",null,"Plopdown Format"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("p",null,"Welcome to the documentation for creating your own plopdown files! We don't have\nan editor yet for the format, but it adheres to the ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("a",{parentName:"p",href:"https://w3c.github.io/webvtt/"},"WebVTT spec")," and\nJSON."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("h2",null,"Headers"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("p",null,"The top of the file contains general information about the plopdown, attribution, and hints about\nwhat video it should be associated with. Heres an example with a description of each field:"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("code",{parentName:"pre",className:"language-yaml"},'WEBVTT                                              # The file always starts with WEBVTT\n_id: 85363ae6-18d6-4cbc-a748-7910ecefe8c6           # The ID is some unique identifier to prevent duplicates\n_rev: 2edad9fb-6b8f-468b-98cd-4261d37686ae          # The revision is used to prevent versioning conflicts\ntype: plopdown_v2                                   # The type is always "plopdown_v2"\ntitle: Minnie the Moocher - Facts and Trivia        # The human readable title of the plopdown\nfor: Minnie The Moocher                             # The human readable name of the associated video\nurl: https://plopdown.video                         # (optional) The url of the homepage this plopdown is associated with\nlicense: CC0                                        # (optional) The license for reuse or remixing this plopdown\nauthors: spaceribs                                  # (optional) Comma delineated list of authors for this plopdown\ncreated: 2019-12-29T00:23:20.156Z                   # ISO-8601 datetime this plopdown was created\nupdated: 2019-12-29T00:23:20.156Z                   # (optional) ISO-8601 datetime this plopdown was last updated\nframeOrigin: https://example.com                    # (optional) Hint of the hostname where the video can be found\nframePath: /video                                   # (optional) Hint of the path under the hostname\nframeSearch: id=123                                 # (optional) Hint of the url parameters under the path\nxpath: /HTML[1]/BODY[1]/VIDEO[1]                    # (optional) Hint of the xpath where the video exists on the page\n')),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("h2",null,"Cues"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("p",null,"Below the headers, and separated by a newline, are the cues which will be rendered into the video:"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("code",{parentName:"pre",className:"language-json"},'info                                                // Required unique identifier for the cue\n00:00:00.000 --\x3e 00:00:05.000                       // Start and end timecodes\n{                                                   // Begin Metadata\n    "type": "INFO",                                 // Type of the cue being rendered.\n    "title": "Minnie the Moocher",                  // Additional data as described by the type.\n    "url": "https://plopdown.video",\n    "authors": ["spaceribs"]\n}                                                   // End Metadata\n')),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)("p",null,"When you're ready, import your track into the plopdown plugin and go to the page with the video\nto test out your new plopdown track. Check out the examples in the sidebar nav to explore the different\nkinds of cues you can specify."))}MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.story={parameters:{docsOnly:!0}};const componentMeta={title:"Intro",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_2__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.mdx)(MDXContent,null))},__webpack_exports__.default=componentMeta},1645:function(module,__webpack_exports__,__webpack_require__){"use strict";var client=__webpack_require__(152),create=__webpack_require__(627),plopdownTheme=Object(create.create)({base:"dark",brandTitle:"Plopdown Video",brandUrl:"https://plopdown.video",brandImage:void 0});Object(client.addParameters)({options:{theme:plopdownTheme,storySort:function storySort(a,b){switch(b[1].kind){case"Intro":return 1;default:return a[1].kind===b[1].kind?0:a[1].id.localeCompare(b[1].id,{numeric:!0})}}}}),Object(client.addParameters)({backgrounds:[{name:"White",value:"#FFF"},{name:"Light Gray",value:"#DDD"},{name:"Medium Gray",value:"#888",default:!0},{name:"Dark Gray",value:"#333"},{name:"Black",value:"#000"}],viewport:{viewports:{standard:{name:"4:3 TV Standard",styles:{width:"640px",height:"480px"}},hd:{name:"16:9 HD Standard",styles:{width:"853px",height:"480px"}},widescreen:{name:"21:9 Widescreen",styles:{width:"1120px",height:"480px"}}},defaultViewport:"standard"}})},527:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=527},628:function(module,exports,__webpack_require__){__webpack_require__(629),__webpack_require__(791),module.exports=__webpack_require__(792)},702:function(module,exports){},792:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(152),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(150),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(626);__webpack_require__(1645);Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.addDecorator)(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs),Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.addParameters)({docs:{container:_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_1__.DocsContainer,page:_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_1__.DocsPage}}),Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.configure)(__webpack_require__(1640),module)}.call(this,__webpack_require__(793)(module))}},[[628,1,2]]]);
//# sourceMappingURL=main.a0cdc31ccb51a404f45b.bundle.js.map