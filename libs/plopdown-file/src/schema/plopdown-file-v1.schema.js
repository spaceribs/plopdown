"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","definitions":{"Author":{"description":"An author to attribute composition to.","maxLength":128,"minLength":2,"type":"string"},"Color":{"description":"A hex, hsl, hsla or rgba color string: #FA9, #FFAA99, rgba(1, 1, 2, 0.5)","pattern":"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$","type":"string"},"Cue":{"additionalProperties":false,"properties":{"data":{"$ref":"#/definitions/PlopdownTemplate"},"endTime":{"type":"number"},"id":{"type":"string"},"startTime":{"type":"number"},"style":{"additionalProperties":{},"type":"object"}},"required":["startTime","endTime","id","data"],"type":"object"},"DashArray":{"description":"A dash array in the form of \"2 3 4\"","pattern":"^([0-9]+\\s)+[0-9]+$","type":"string"},"DashOffset":{"description":"An integer representing the dash offset of a stroke.","maximum":100,"minimum":-100,"type":"integer"},"Degree":{"description":"Degrees for rotation of elements.","maximum":360,"minimum":-360,"type":"number"},"Description":{"description":"A medium long description","maxLength":1024,"minLength":2,"type":"string"},"Emoji":{"description":"A single emoji character, ligatures mean the max length can be up to 3 characters.","maxLength":32,"minLength":1,"type":"string"},"ExternalLink":{"description":"An external URL to get more information.","type":"string"},"Opacity":{"description":"A normalized opacity ranged between 0.0 and 1.0","maximum":1,"minimum":0,"type":"number"},"Percentage":{"description":"A bounded percentage relative to the container.","maximum":1000,"minimum":-100,"type":"number"},"PlopdownAudio":{"additionalProperties":false,"properties":{"left":{"$ref":"#/definitions/Percentage"},"offset_time":{"$ref":"#/definitions/Seconds"},"title":{"$ref":"#/definitions/Title"},"top":{"$ref":"#/definitions/Percentage"},"type":{"const":"AUDIO","type":"string"},"url":{"$ref":"#/definitions/URIReference"}},"required":["left","title","top","type","url"],"type":"object"},"PlopdownInfo":{"additionalProperties":false,"properties":{"authors":{"items":{"$ref":"#/definitions/Author"},"type":"array"},"title":{"$ref":"#/definitions/Title"},"type":{"const":"INFO","type":"string"},"url":{"$ref":"#/definitions/ExternalLink"}},"required":["authors","title","type"],"type":"object"},"PlopdownPlop":{"additionalProperties":false,"properties":{"desc":{"$ref":"#/definitions/Description"},"footnotes":{"items":{"additionalProperties":false,"properties":{"title":{"$ref":"#/definitions/Title"},"url":{"$ref":"#/definitions/ExternalLink"}},"required":["title","url"],"type":"object"},"type":"array"},"icons":{"items":{"additionalProperties":false,"properties":{"emoji":{"$ref":"#/definitions/Emoji"},"left":{"$ref":"#/definitions/Percentage"},"rotate":{"$ref":"#/definitions/Degree"},"size":{"$ref":"#/definitions/Percentage"},"top":{"$ref":"#/definitions/Percentage"}},"required":["top","left","size","rotate","emoji"],"type":"object"},"type":"array"},"left":{"$ref":"#/definitions/Percentage"},"top":{"$ref":"#/definitions/Percentage"},"type":{"const":"PLOP","type":"string"},"width":{"$ref":"#/definitions/Percentage"}},"required":["desc","icons","left","top","type","width"],"type":"object"},"PlopdownShape":{"additionalProperties":false,"properties":{"blend":{"enum":["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],"type":"string"},"elements":{"items":{"anyOf":[{"$ref":"#/definitions/PlopdownShapeEllipse"},{"$ref":"#/definitions/PlopdownShapeRect"},{"$ref":"#/definitions/PlopdownShapePath"},{"$ref":"#/definitions/PlopdownShapePolygon"},{"$ref":"#/definitions/PlopdownShapePolyline"}]},"type":"array"},"height":{"$ref":"#/definitions/Percentage"},"left":{"$ref":"#/definitions/Percentage"},"title":{"additionalProperties":false,"properties":{"show":{"type":"boolean"},"text":{"$ref":"#/definitions/Title"}},"required":["text","show"],"type":"object"},"top":{"$ref":"#/definitions/Percentage"},"type":{"const":"SHAPE","type":"string"},"viewBox":{"$ref":"#/definitions/ViewBox"},"width":{"$ref":"#/definitions/Percentage"}},"required":["elements","height","left","title","top","type","viewBox","width"],"type":"object"},"PlopdownShapeEllipse":{"additionalProperties":false,"properties":{"cx":{"$ref":"#/definitions/ViewportCoordinate"},"cy":{"$ref":"#/definitions/ViewportCoordinate"},"element":{"const":"ellipse","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"rx":{"$ref":"#/definitions/ViewportCoordinate"},"ry":{"$ref":"#/definitions/ViewportCoordinate"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["cx","cy","element","rx","ry"],"type":"object"},"PlopdownShapePath":{"additionalProperties":false,"properties":{"d":{"$ref":"#/definitions/ViewportPath"},"element":{"const":"path","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["d","element"],"type":"object"},"PlopdownShapePolygon":{"additionalProperties":false,"properties":{"element":{"const":"polygon","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"points":{"$ref":"#/definitions/ViewportCoordinatePairs"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["element","points"],"type":"object"},"PlopdownShapePolyline":{"additionalProperties":false,"properties":{"element":{"const":"polyline","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"points":{"$ref":"#/definitions/ViewportCoordinatePairs"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["element","points"],"type":"object"},"PlopdownShapeRect":{"additionalProperties":false,"properties":{"element":{"const":"rect","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"height":{"$ref":"#/definitions/ViewportCoordinate"},"opacity":{"$ref":"#/definitions/Opacity"},"rx":{"$ref":"#/definitions/ViewportCoordinate"},"ry":{"$ref":"#/definitions/ViewportCoordinate"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"},"width":{"$ref":"#/definitions/ViewportCoordinate"},"x":{"$ref":"#/definitions/ViewportCoordinate"},"y":{"$ref":"#/definitions/ViewportCoordinate"}},"required":["element","height","width","x","y"],"type":"object"},"PlopdownTemplate":{"anyOf":[{"$ref":"#/definitions/PlopdownInfo"},{"$ref":"#/definitions/PlopdownPlop"},{"$ref":"#/definitions/PlopdownAudio"},{"$ref":"#/definitions/PlopdownShape"}]},"PouchDB.Core.DocumentId":{"type":"string"},"PouchDB.Core.RevisionId":{"type":"string"},"Seconds":{"description":"Number representing duration in seconds, precision allowed down to milliseconds.","minimum":0,"multipleOf":0.001,"type":"number"},"Title":{"description":"A short statement.","maxLength":256,"minLength":2,"type":"string"},"Transform":{"description":"A short css transform string.","maxLength":128,"minLength":2,"type":"string"},"TransformOrigin":{"description":"A transform origin string.","maxLength":128,"minLength":2,"type":"string"},"URIReference":{"description":"The location of a file.","type":"string"},"ViewBox":{"description":"An svg viewbox in the form of \"0 0 100 100\"","pattern":"^([0-9]+\\s){3}[0-9]+$","type":"string"},"ViewportCoordinate":{"description":"An integer representing the dash offset of a stroke.","minimum":0,"type":"number"},"ViewportCoordinatePairs":{"description":"A dash array in the form of \"2 3 4\"","pattern":"^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$","type":"string"},"ViewportPath":{"description":"The \"d\" parameter of an svg path.","maxLength":1024,"minLength":2,"type":"string"}},"description":"File containing an exported plopdown video reference and track.","properties":{"cues":{"description":"The cues associated with this track.","items":{"$ref":"#/definitions/Cue"},"type":"array"},"files":{"items":{"type":"string"},"type":"array"},"headers":{"additionalProperties":{"anyOf":[{"not":{}},{"type":"string"}]},"description":"Unofficially, WebVTT supports simple key/value storage at the top of the file. We use that to allow creators to hint which video the plopdown should be overlayed to, as well as other authorship info.","properties":{"_id":{"$ref":"#/definitions/PouchDB.Core.DocumentId"},"_rev":{"$ref":"#/definitions/PouchDB.Core.RevisionId"},"authors":{"description":"Author names in whatever form makes sense","type":"string"},"created":{"description":"The date in which this track was created.","type":"string"},"duration":{"type":"string"},"for":{"description":"Name of the video this track was intended for.","type":"string"},"frameOrigin":{"type":"string"},"framePath":{"type":"string"},"frameSearch":{"type":"string"},"frameTitle":{"type":"string"},"language":{"description":"Language of the track in \"en-US\" format See: https://gist.github.com/ndbroadbent/588fefab8e0f1b459fcec8181b41b39c","type":"string"},"license":{"description":"Capitalized license associated with this file","type":"string"},"thumbnail":{"description":"The thumbnail image of the track, usually packaged alongside the track or fetched remotely.","type":"string"},"title":{"description":"Name of the plopdown","type":"string"},"type":{"const":"plopdown_v2","description":"Schema version number","type":"string"},"updated":{"description":"The date in which this track was last updated.","type":"string"},"url":{"description":"URL of this track's homepage.","type":"string"},"xpath":{"type":"string"}},"required":["_id","_rev","created","for","title","type","xpath"],"type":"object"}},"required":["headers","cues"],"type":"object"};const schema122 = {"type":"string"};const schema123 = {"type":"string"};const schema23 = {"additionalProperties":false,"properties":{"data":{"$ref":"#/definitions/PlopdownTemplate"},"endTime":{"type":"number"},"id":{"type":"string"},"startTime":{"type":"number"},"style":{"additionalProperties":{},"type":"object"}},"required":["startTime","endTime","id","data"],"type":"object"};const schema24 = {"anyOf":[{"$ref":"#/definitions/PlopdownInfo"},{"$ref":"#/definitions/PlopdownPlop"},{"$ref":"#/definitions/PlopdownAudio"},{"$ref":"#/definitions/PlopdownShape"}]};const schema25 = {"additionalProperties":false,"properties":{"authors":{"items":{"$ref":"#/definitions/Author"},"type":"array"},"title":{"$ref":"#/definitions/Title"},"type":{"const":"INFO","type":"string"},"url":{"$ref":"#/definitions/ExternalLink"}},"required":["authors","title","type"],"type":"object"};const schema26 = {"description":"An author to attribute composition to.","maxLength":128,"minLength":2,"type":"string"};const schema27 = {"description":"A short statement.","maxLength":256,"minLength":2,"type":"string"};const schema28 = {"description":"An external URL to get more information.","type":"string"};const func8 = require("ajv/dist/runtime/ucs2length").default;function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.authors === undefined) && (missing0 = "authors")) || ((data.title === undefined) && (missing0 = "title"))) || ((data.type === undefined) && (missing0 = "type"))){validate23.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((key0 === "authors") || (key0 === "title")) || (key0 === "type")) || (key0 === "url"))){validate23.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.authors !== undefined){let data0 = data.authors;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(typeof data1 === "string"){if(func8(data1) > 128){validate23.errors = [{instancePath:instancePath+"/authors/" + i0,schemaPath:"#/definitions/Author/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data1) < 2){validate23.errors = [{instancePath:instancePath+"/authors/" + i0,schemaPath:"#/definitions/Author/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/authors/" + i0,schemaPath:"#/definitions/Author/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate23.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){let data2 = data.title;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(typeof data2 === "string"){if(func8(data2) > 256){validate23.errors = [{instancePath:instancePath+"/title",schemaPath:"#/definitions/Title/maxLength",keyword:"maxLength",params:{limit: 256},message:"must NOT have more than 256 characters"}];return false;}else {if(func8(data2) < 2){validate23.errors = [{instancePath:instancePath+"/title",schemaPath:"#/definitions/Title/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/title",schemaPath:"#/definitions/Title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data3 = data.type;const _errs10 = errors;if(typeof data3 !== "string"){validate23.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("INFO" !== data3){validate23.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "INFO"},message:"must be equal to constant"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){const _errs12 = errors;if(typeof data.url !== "string"){validate23.errors = [{instancePath:instancePath+"/url",schemaPath:"#/definitions/ExternalLink/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}const schema29 = {"additionalProperties":false,"properties":{"desc":{"$ref":"#/definitions/Description"},"footnotes":{"items":{"additionalProperties":false,"properties":{"title":{"$ref":"#/definitions/Title"},"url":{"$ref":"#/definitions/ExternalLink"}},"required":["title","url"],"type":"object"},"type":"array"},"icons":{"items":{"additionalProperties":false,"properties":{"emoji":{"$ref":"#/definitions/Emoji"},"left":{"$ref":"#/definitions/Percentage"},"rotate":{"$ref":"#/definitions/Degree"},"size":{"$ref":"#/definitions/Percentage"},"top":{"$ref":"#/definitions/Percentage"}},"required":["top","left","size","rotate","emoji"],"type":"object"},"type":"array"},"left":{"$ref":"#/definitions/Percentage"},"top":{"$ref":"#/definitions/Percentage"},"type":{"const":"PLOP","type":"string"},"width":{"$ref":"#/definitions/Percentage"}},"required":["desc","icons","left","top","type","width"],"type":"object"};const schema30 = {"description":"A medium long description","maxLength":1024,"minLength":2,"type":"string"};const schema33 = {"description":"A single emoji character, ligatures mean the max length can be up to 3 characters.","maxLength":32,"minLength":1,"type":"string"};const schema34 = {"description":"A bounded percentage relative to the container.","maximum":1000,"minimum":-100,"type":"number"};const schema35 = {"description":"Degrees for rotation of elements.","maximum":360,"minimum":-360,"type":"number"};function validate25(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((data.desc === undefined) && (missing0 = "desc")) || ((data.icons === undefined) && (missing0 = "icons"))) || ((data.left === undefined) && (missing0 = "left"))) || ((data.top === undefined) && (missing0 = "top"))) || ((data.type === undefined) && (missing0 = "type"))) || ((data.width === undefined) && (missing0 = "width"))){validate25.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "desc") || (key0 === "footnotes")) || (key0 === "icons")) || (key0 === "left")) || (key0 === "top")) || (key0 === "type")) || (key0 === "width"))){validate25.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.desc !== undefined){let data0 = data.desc;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(typeof data0 === "string"){if(func8(data0) > 1024){validate25.errors = [{instancePath:instancePath+"/desc",schemaPath:"#/definitions/Description/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func8(data0) < 2){validate25.errors = [{instancePath:instancePath+"/desc",schemaPath:"#/definitions/Description/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/desc",schemaPath:"#/definitions/Description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.footnotes !== undefined){let data1 = data.footnotes;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data1)){var valid2 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.title === undefined) && (missing1 = "title")) || ((data2.url === undefined) && (missing1 = "url"))){validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0,schemaPath:"#/properties/footnotes/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs9 = errors;for(const key1 in data2){if(!((key1 === "title") || (key1 === "url"))){validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0,schemaPath:"#/properties/footnotes/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data2.title !== undefined){let data3 = data2.title;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(typeof data3 === "string"){if(func8(data3) > 256){validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0+"/title",schemaPath:"#/definitions/Title/maxLength",keyword:"maxLength",params:{limit: 256},message:"must NOT have more than 256 characters"}];return false;}else {if(func8(data3) < 2){validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0+"/title",schemaPath:"#/definitions/Title/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0+"/title",schemaPath:"#/definitions/Title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data2.url !== undefined){const _errs13 = errors;if(typeof data2.url !== "string"){validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0+"/url",schemaPath:"#/definitions/ExternalLink/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}}}}}else {validate25.errors = [{instancePath:instancePath+"/footnotes/" + i0,schemaPath:"#/properties/footnotes/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs7 === errors;if(!valid2){break;}}}else {validate25.errors = [{instancePath:instancePath+"/footnotes",schemaPath:"#/properties/footnotes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.icons !== undefined){let data5 = data.icons;const _errs16 = errors;if(errors === _errs16){if(Array.isArray(data5)){var valid6 = true;const len1 = data5.length;for(let i1=0; i1<len1; i1++){let data6 = data5[i1];const _errs18 = errors;if(errors === _errs18){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){let missing2;if((((((data6.top === undefined) && (missing2 = "top")) || ((data6.left === undefined) && (missing2 = "left"))) || ((data6.size === undefined) && (missing2 = "size"))) || ((data6.rotate === undefined) && (missing2 = "rotate"))) || ((data6.emoji === undefined) && (missing2 = "emoji"))){validate25.errors = [{instancePath:instancePath+"/icons/" + i1,schemaPath:"#/properties/icons/items/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs20 = errors;for(const key2 in data6){if(!(((((key2 === "emoji") || (key2 === "left")) || (key2 === "rotate")) || (key2 === "size")) || (key2 === "top"))){validate25.errors = [{instancePath:instancePath+"/icons/" + i1,schemaPath:"#/properties/icons/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs20 === errors){if(data6.emoji !== undefined){let data7 = data6.emoji;const _errs21 = errors;const _errs22 = errors;if(errors === _errs22){if(typeof data7 === "string"){if(func8(data7) > 32){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/emoji",schemaPath:"#/definitions/Emoji/maxLength",keyword:"maxLength",params:{limit: 32},message:"must NOT have more than 32 characters"}];return false;}else {if(func8(data7) < 1){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/emoji",schemaPath:"#/definitions/Emoji/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/emoji",schemaPath:"#/definitions/Emoji/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid7 = _errs21 === errors;}else {var valid7 = true;}if(valid7){if(data6.left !== undefined){let data8 = data6.left;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if((typeof data8 == "number") && (isFinite(data8))){if(data8 > 1000 || isNaN(data8)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/left",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data8 < -100 || isNaN(data8)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/left",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/left",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid7 = _errs24 === errors;}else {var valid7 = true;}if(valid7){if(data6.rotate !== undefined){let data9 = data6.rotate;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if((typeof data9 == "number") && (isFinite(data9))){if(data9 > 360 || isNaN(data9)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/rotate",schemaPath:"#/definitions/Degree/maximum",keyword:"maximum",params:{comparison: "<=", limit: 360},message:"must be <= 360"}];return false;}else {if(data9 < -360 || isNaN(data9)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/rotate",schemaPath:"#/definitions/Degree/minimum",keyword:"minimum",params:{comparison: ">=", limit: -360},message:"must be >= -360"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/rotate",schemaPath:"#/definitions/Degree/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid7 = _errs27 === errors;}else {var valid7 = true;}if(valid7){if(data6.size !== undefined){let data10 = data6.size;const _errs30 = errors;const _errs31 = errors;if(errors === _errs31){if((typeof data10 == "number") && (isFinite(data10))){if(data10 > 1000 || isNaN(data10)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/size",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data10 < -100 || isNaN(data10)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/size",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/size",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid7 = _errs30 === errors;}else {var valid7 = true;}if(valid7){if(data6.top !== undefined){let data11 = data6.top;const _errs33 = errors;const _errs34 = errors;if(errors === _errs34){if((typeof data11 == "number") && (isFinite(data11))){if(data11 > 1000 || isNaN(data11)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/top",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data11 < -100 || isNaN(data11)){validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/top",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/icons/" + i1+"/top",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid7 = _errs33 === errors;}else {var valid7 = true;}}}}}}}}else {validate25.errors = [{instancePath:instancePath+"/icons/" + i1,schemaPath:"#/properties/icons/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs18 === errors;if(!valid6){break;}}}else {validate25.errors = [{instancePath:instancePath+"/icons",schemaPath:"#/properties/icons/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.left !== undefined){let data12 = data.left;const _errs36 = errors;const _errs37 = errors;if(errors === _errs37){if((typeof data12 == "number") && (isFinite(data12))){if(data12 > 1000 || isNaN(data12)){validate25.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data12 < -100 || isNaN(data12)){validate25.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.top !== undefined){let data13 = data.top;const _errs39 = errors;const _errs40 = errors;if(errors === _errs40){if((typeof data13 == "number") && (isFinite(data13))){if(data13 > 1000 || isNaN(data13)){validate25.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data13 < -100 || isNaN(data13)){validate25.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data14 = data.type;const _errs42 = errors;if(typeof data14 !== "string"){validate25.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("PLOP" !== data14){validate25.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "PLOP"},message:"must be equal to constant"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.width !== undefined){let data15 = data.width;const _errs44 = errors;const _errs45 = errors;if(errors === _errs45){if((typeof data15 == "number") && (isFinite(data15))){if(data15 > 1000 || isNaN(data15)){validate25.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data15 < -100 || isNaN(data15)){validate25.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate25.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs44 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate25.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate25.errors = vErrors;return errors === 0;}const schema41 = {"additionalProperties":false,"properties":{"left":{"$ref":"#/definitions/Percentage"},"offset_time":{"$ref":"#/definitions/Seconds"},"title":{"$ref":"#/definitions/Title"},"top":{"$ref":"#/definitions/Percentage"},"type":{"const":"AUDIO","type":"string"},"url":{"$ref":"#/definitions/URIReference"}},"required":["left","title","top","type","url"],"type":"object"};const schema43 = {"description":"Number representing duration in seconds, precision allowed down to milliseconds.","minimum":0,"multipleOf":0.001,"type":"number"};const schema46 = {"description":"The location of a file.","type":"string"};function validate27(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((data.left === undefined) && (missing0 = "left")) || ((data.title === undefined) && (missing0 = "title"))) || ((data.top === undefined) && (missing0 = "top"))) || ((data.type === undefined) && (missing0 = "type"))) || ((data.url === undefined) && (missing0 = "url"))){validate27.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "left") || (key0 === "offset_time")) || (key0 === "title")) || (key0 === "top")) || (key0 === "type")) || (key0 === "url"))){validate27.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.left !== undefined){let data0 = data.left;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if((typeof data0 == "number") && (isFinite(data0))){if(data0 > 1000 || isNaN(data0)){validate27.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data0 < -100 || isNaN(data0)){validate27.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate27.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.offset_time !== undefined){let data1 = data.offset_time;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if((typeof data1 == "number") && (isFinite(data1))){if(data1 < 0 || isNaN(data1)){validate27.errors = [{instancePath:instancePath+"/offset_time",schemaPath:"#/definitions/Seconds/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}else {let res0;if((0.001 === 0 || (res0 = data1/0.001, res0 !== parseInt(res0)))){validate27.errors = [{instancePath:instancePath+"/offset_time",schemaPath:"#/definitions/Seconds/multipleOf",keyword:"multipleOf",params:{multipleOf: 0.001},message:"must be multiple of 0.001"}];return false;}}}else {validate27.errors = [{instancePath:instancePath+"/offset_time",schemaPath:"#/definitions/Seconds/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){let data2 = data.title;const _errs8 = errors;const _errs9 = errors;if(errors === _errs9){if(typeof data2 === "string"){if(func8(data2) > 256){validate27.errors = [{instancePath:instancePath+"/title",schemaPath:"#/definitions/Title/maxLength",keyword:"maxLength",params:{limit: 256},message:"must NOT have more than 256 characters"}];return false;}else {if(func8(data2) < 2){validate27.errors = [{instancePath:instancePath+"/title",schemaPath:"#/definitions/Title/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate27.errors = [{instancePath:instancePath+"/title",schemaPath:"#/definitions/Title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.top !== undefined){let data3 = data.top;const _errs11 = errors;const _errs12 = errors;if(errors === _errs12){if((typeof data3 == "number") && (isFinite(data3))){if(data3 > 1000 || isNaN(data3)){validate27.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data3 < -100 || isNaN(data3)){validate27.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate27.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data4 = data.type;const _errs14 = errors;if(typeof data4 !== "string"){validate27.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("AUDIO" !== data4){validate27.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "AUDIO"},message:"must be equal to constant"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){const _errs16 = errors;if(typeof data.url !== "string"){validate27.errors = [{instancePath:instancePath+"/url",schemaPath:"#/definitions/URIReference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}}}}}}}}}else {validate27.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate27.errors = vErrors;return errors === 0;}const schema47 = {"additionalProperties":false,"properties":{"blend":{"enum":["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],"type":"string"},"elements":{"items":{"anyOf":[{"$ref":"#/definitions/PlopdownShapeEllipse"},{"$ref":"#/definitions/PlopdownShapeRect"},{"$ref":"#/definitions/PlopdownShapePath"},{"$ref":"#/definitions/PlopdownShapePolygon"},{"$ref":"#/definitions/PlopdownShapePolyline"}]},"type":"array"},"height":{"$ref":"#/definitions/Percentage"},"left":{"$ref":"#/definitions/Percentage"},"title":{"additionalProperties":false,"properties":{"show":{"type":"boolean"},"text":{"$ref":"#/definitions/Title"}},"required":["text","show"],"type":"object"},"top":{"$ref":"#/definitions/Percentage"},"type":{"const":"SHAPE","type":"string"},"viewBox":{"$ref":"#/definitions/ViewBox"},"width":{"$ref":"#/definitions/Percentage"}},"required":["elements","height","left","title","top","type","viewBox","width"],"type":"object"};const schema120 = {"description":"An svg viewbox in the form of \"0 0 100 100\"","pattern":"^([0-9]+\\s){3}[0-9]+$","type":"string"};const func20 = Object.prototype.hasOwnProperty;const func0 = require("ajv/dist/runtime/equal").default;const schema48 = {"additionalProperties":false,"properties":{"cx":{"$ref":"#/definitions/ViewportCoordinate"},"cy":{"$ref":"#/definitions/ViewportCoordinate"},"element":{"const":"ellipse","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"rx":{"$ref":"#/definitions/ViewportCoordinate"},"ry":{"$ref":"#/definitions/ViewportCoordinate"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["cx","cy","element","rx","ry"],"type":"object"};const schema49 = {"description":"An integer representing the dash offset of a stroke.","minimum":0,"type":"number"};const schema51 = {"description":"A hex, hsl, hsla or rgba color string: #FA9, #FFAA99, rgba(1, 1, 2, 0.5)","pattern":"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$","type":"string"};const schema52 = {"description":"A normalized opacity ranged between 0.0 and 1.0","maximum":1,"minimum":0,"type":"number"};const schema57 = {"description":"A dash array in the form of \"2 3 4\"","pattern":"^([0-9]+\\s)+[0-9]+$","type":"string"};const schema58 = {"description":"An integer representing the dash offset of a stroke.","maximum":100,"minimum":-100,"type":"integer"};const schema61 = {"description":"A short css transform string.","maxLength":128,"minLength":2,"type":"string"};const schema62 = {"description":"A transform origin string.","maxLength":128,"minLength":2,"type":"string"};const pattern0 = new RegExp("^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$", "u");const pattern2 = new RegExp("^([0-9]+\\s)+[0-9]+$", "u");function validate30(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((data.cx === undefined) && (missing0 = "cx")) || ((data.cy === undefined) && (missing0 = "cy"))) || ((data.element === undefined) && (missing0 = "element"))) || ((data.rx === undefined) && (missing0 = "rx"))) || ((data.ry === undefined) && (missing0 = "ry"))){validate30.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func20.call(schema48.properties, key0))){validate30.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.cx !== undefined){let data0 = data.cx;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if((typeof data0 == "number") && (isFinite(data0))){if(data0 < 0 || isNaN(data0)){validate30.errors = [{instancePath:instancePath+"/cx",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/cx",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.cy !== undefined){let data1 = data.cy;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if((typeof data1 == "number") && (isFinite(data1))){if(data1 < 0 || isNaN(data1)){validate30.errors = [{instancePath:instancePath+"/cy",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/cy",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.element !== undefined){let data2 = data.element;const _errs8 = errors;if(typeof data2 !== "string"){validate30.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("ellipse" !== data2){validate30.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/const",keyword:"const",params:{allowedValue: "ellipse"},message:"must be equal to constant"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.fill !== undefined){let data3 = data.fill;const _errs10 = errors;if(errors === _errs10){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){const _errs12 = errors;for(const key1 in data3){if(!(((key1 === "color") || (key1 === "opacity")) || (key1 === "rule"))){validate30.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs12 === errors){if(data3.color !== undefined){let data4 = data3.color;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if(typeof data4 === "string"){if(!pattern0.test(data4)){validate30.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs13 === errors;}else {var valid3 = true;}if(valid3){if(data3.opacity !== undefined){let data5 = data3.opacity;const _errs16 = errors;const _errs17 = errors;if(errors === _errs17){if((typeof data5 == "number") && (isFinite(data5))){if(data5 > 1 || isNaN(data5)){validate30.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data5 < 0 || isNaN(data5)){validate30.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid3 = _errs16 === errors;}else {var valid3 = true;}if(valid3){if(data3.rule !== undefined){let data6 = data3.rule;const _errs19 = errors;if(typeof data6 !== "string"){validate30.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data6 === "nonzero") || (data6 === "evenodd"))){validate30.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/enum",keyword:"enum",params:{allowedValues: schema48.properties.fill.properties.rule.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs19 === errors;}else {var valid3 = true;}}}}}else {validate30.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.opacity !== undefined){let data7 = data.opacity;const _errs21 = errors;const _errs22 = errors;if(errors === _errs22){if((typeof data7 == "number") && (isFinite(data7))){if(data7 > 1 || isNaN(data7)){validate30.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data7 < 0 || isNaN(data7)){validate30.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.rx !== undefined){let data8 = data.rx;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if((typeof data8 == "number") && (isFinite(data8))){if(data8 < 0 || isNaN(data8)){validate30.errors = [{instancePath:instancePath+"/rx",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/rx",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.ry !== undefined){let data9 = data.ry;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if((typeof data9 == "number") && (isFinite(data9))){if(data9 < 0 || isNaN(data9)){validate30.errors = [{instancePath:instancePath+"/ry",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/ry",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.stroke !== undefined){let data10 = data.stroke;const _errs30 = errors;if(errors === _errs30){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){const _errs32 = errors;for(const key2 in data10){if(!(((((((key2 === "color") || (key2 === "dasharray")) || (key2 === "dashoffset")) || (key2 === "linecap")) || (key2 === "linejoin")) || (key2 === "opacity")) || (key2 === "width"))){validate30.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs32 === errors){if(data10.color !== undefined){let data11 = data10.color;const _errs33 = errors;const _errs34 = errors;if(errors === _errs34){if(typeof data11 === "string"){if(!pattern0.test(data11)){validate30.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid9 = _errs33 === errors;}else {var valid9 = true;}if(valid9){if(data10.dasharray !== undefined){let data12 = data10.dasharray;const _errs36 = errors;const _errs37 = errors;if(errors === _errs37){if(typeof data12 === "string"){if(!pattern2.test(data12)){validate30.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/pattern",keyword:"pattern",params:{pattern: "^([0-9]+\\s)+[0-9]+$"},message:"must match pattern \""+"^([0-9]+\\s)+[0-9]+$"+"\""}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid9 = _errs36 === errors;}else {var valid9 = true;}if(valid9){if(data10.dashoffset !== undefined){let data13 = data10.dashoffset;const _errs39 = errors;const _errs40 = errors;if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){validate30.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs40){if((typeof data13 == "number") && (isFinite(data13))){if(data13 > 100 || isNaN(data13)){validate30.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/maximum",keyword:"maximum",params:{comparison: "<=", limit: 100},message:"must be <= 100"}];return false;}else {if(data13 < -100 || isNaN(data13)){validate30.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}}var valid9 = _errs39 === errors;}else {var valid9 = true;}if(valid9){if(data10.linecap !== undefined){let data14 = data10.linecap;const _errs42 = errors;if(typeof data14 !== "string"){validate30.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data14 === "butt") || (data14 === "square")) || (data14 === "round"))){validate30.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/enum",keyword:"enum",params:{allowedValues: schema48.properties.stroke.properties.linecap.enum},message:"must be equal to one of the allowed values"}];return false;}var valid9 = _errs42 === errors;}else {var valid9 = true;}if(valid9){if(data10.linejoin !== undefined){let data15 = data10.linejoin;const _errs44 = errors;if(typeof data15 !== "string"){validate30.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data15 === "miter") || (data15 === "round")) || (data15 === "bevel"))){validate30.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/enum",keyword:"enum",params:{allowedValues: schema48.properties.stroke.properties.linejoin.enum},message:"must be equal to one of the allowed values"}];return false;}var valid9 = _errs44 === errors;}else {var valid9 = true;}if(valid9){if(data10.opacity !== undefined){let data16 = data10.opacity;const _errs46 = errors;const _errs47 = errors;if(errors === _errs47){if((typeof data16 == "number") && (isFinite(data16))){if(data16 > 1 || isNaN(data16)){validate30.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data16 < 0 || isNaN(data16)){validate30.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid9 = _errs46 === errors;}else {var valid9 = true;}if(valid9){if(data10.width !== undefined){let data17 = data10.width;const _errs49 = errors;const _errs50 = errors;if(errors === _errs50){if((typeof data17 == "number") && (isFinite(data17))){if(data17 < 0 || isNaN(data17)){validate30.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid9 = _errs49 === errors;}else {var valid9 = true;}}}}}}}}}else {validate30.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.transform !== undefined){let data18 = data.transform;const _errs52 = errors;const _errs53 = errors;if(errors === _errs53){if(typeof data18 === "string"){if(func8(data18) > 128){validate30.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data18) < 2){validate30.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs52 === errors;}else {var valid0 = true;}if(valid0){if(data.transformOrigin !== undefined){let data19 = data.transformOrigin;const _errs55 = errors;const _errs56 = errors;if(errors === _errs56){if(typeof data19 === "string"){if(func8(data19) > 128){validate30.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data19) < 2){validate30.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs55 === errors;}else {var valid0 = true;}}}}}}}}}}}}}else {validate30.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate30.errors = vErrors;return errors === 0;}const schema63 = {"additionalProperties":false,"properties":{"element":{"const":"rect","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"height":{"$ref":"#/definitions/ViewportCoordinate"},"opacity":{"$ref":"#/definitions/Opacity"},"rx":{"$ref":"#/definitions/ViewportCoordinate"},"ry":{"$ref":"#/definitions/ViewportCoordinate"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"},"width":{"$ref":"#/definitions/ViewportCoordinate"},"x":{"$ref":"#/definitions/ViewportCoordinate"},"y":{"$ref":"#/definitions/ViewportCoordinate"}},"required":["element","height","width","x","y"],"type":"object"};function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((data.element === undefined) && (missing0 = "element")) || ((data.height === undefined) && (missing0 = "height"))) || ((data.width === undefined) && (missing0 = "width"))) || ((data.x === undefined) && (missing0 = "x"))) || ((data.y === undefined) && (missing0 = "y"))){validate32.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func20.call(schema63.properties, key0))){validate32.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.element !== undefined){let data0 = data.element;const _errs2 = errors;if(typeof data0 !== "string"){validate32.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("rect" !== data0){validate32.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/const",keyword:"const",params:{allowedValue: "rect"},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fill !== undefined){let data1 = data.fill;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){const _errs6 = errors;for(const key1 in data1){if(!(((key1 === "color") || (key1 === "opacity")) || (key1 === "rule"))){validate32.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs6 === errors){if(data1.color !== undefined){let data2 = data1.color;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(typeof data2 === "string"){if(!pattern0.test(data2)){validate32.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data1.opacity !== undefined){let data3 = data1.opacity;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if((typeof data3 == "number") && (isFinite(data3))){if(data3 > 1 || isNaN(data3)){validate32.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data3 < 0 || isNaN(data3)){validate32.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate32.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data1.rule !== undefined){let data4 = data1.rule;const _errs13 = errors;if(typeof data4 !== "string"){validate32.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data4 === "nonzero") || (data4 === "evenodd"))){validate32.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/enum",keyword:"enum",params:{allowedValues: schema63.properties.fill.properties.rule.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs13 === errors;}else {var valid1 = true;}}}}}else {validate32.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.height !== undefined){let data5 = data.height;const _errs15 = errors;const _errs16 = errors;if(errors === _errs16){if((typeof data5 == "number") && (isFinite(data5))){if(data5 < 0 || isNaN(data5)){validate32.errors = [{instancePath:instancePath+"/height",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/height",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.opacity !== undefined){let data6 = data.opacity;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if((typeof data6 == "number") && (isFinite(data6))){if(data6 > 1 || isNaN(data6)){validate32.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data6 < 0 || isNaN(data6)){validate32.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate32.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.rx !== undefined){let data7 = data.rx;const _errs21 = errors;const _errs22 = errors;if(errors === _errs22){if((typeof data7 == "number") && (isFinite(data7))){if(data7 < 0 || isNaN(data7)){validate32.errors = [{instancePath:instancePath+"/rx",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/rx",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.ry !== undefined){let data8 = data.ry;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if((typeof data8 == "number") && (isFinite(data8))){if(data8 < 0 || isNaN(data8)){validate32.errors = [{instancePath:instancePath+"/ry",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/ry",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.stroke !== undefined){let data9 = data.stroke;const _errs27 = errors;if(errors === _errs27){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){const _errs29 = errors;for(const key2 in data9){if(!(((((((key2 === "color") || (key2 === "dasharray")) || (key2 === "dashoffset")) || (key2 === "linecap")) || (key2 === "linejoin")) || (key2 === "opacity")) || (key2 === "width"))){validate32.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs29 === errors){if(data9.color !== undefined){let data10 = data9.color;const _errs30 = errors;const _errs31 = errors;if(errors === _errs31){if(typeof data10 === "string"){if(!pattern0.test(data10)){validate32.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid8 = _errs30 === errors;}else {var valid8 = true;}if(valid8){if(data9.dasharray !== undefined){let data11 = data9.dasharray;const _errs33 = errors;const _errs34 = errors;if(errors === _errs34){if(typeof data11 === "string"){if(!pattern2.test(data11)){validate32.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/pattern",keyword:"pattern",params:{pattern: "^([0-9]+\\s)+[0-9]+$"},message:"must match pattern \""+"^([0-9]+\\s)+[0-9]+$"+"\""}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid8 = _errs33 === errors;}else {var valid8 = true;}if(valid8){if(data9.dashoffset !== undefined){let data12 = data9.dashoffset;const _errs36 = errors;const _errs37 = errors;if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){validate32.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs37){if((typeof data12 == "number") && (isFinite(data12))){if(data12 > 100 || isNaN(data12)){validate32.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/maximum",keyword:"maximum",params:{comparison: "<=", limit: 100},message:"must be <= 100"}];return false;}else {if(data12 < -100 || isNaN(data12)){validate32.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}}var valid8 = _errs36 === errors;}else {var valid8 = true;}if(valid8){if(data9.linecap !== undefined){let data13 = data9.linecap;const _errs39 = errors;if(typeof data13 !== "string"){validate32.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data13 === "butt") || (data13 === "square")) || (data13 === "round"))){validate32.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/enum",keyword:"enum",params:{allowedValues: schema63.properties.stroke.properties.linecap.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs39 === errors;}else {var valid8 = true;}if(valid8){if(data9.linejoin !== undefined){let data14 = data9.linejoin;const _errs41 = errors;if(typeof data14 !== "string"){validate32.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data14 === "miter") || (data14 === "round")) || (data14 === "bevel"))){validate32.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/enum",keyword:"enum",params:{allowedValues: schema63.properties.stroke.properties.linejoin.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs41 === errors;}else {var valid8 = true;}if(valid8){if(data9.opacity !== undefined){let data15 = data9.opacity;const _errs43 = errors;const _errs44 = errors;if(errors === _errs44){if((typeof data15 == "number") && (isFinite(data15))){if(data15 > 1 || isNaN(data15)){validate32.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data15 < 0 || isNaN(data15)){validate32.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate32.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid8 = _errs43 === errors;}else {var valid8 = true;}if(valid8){if(data9.width !== undefined){let data16 = data9.width;const _errs46 = errors;const _errs47 = errors;if(errors === _errs47){if((typeof data16 == "number") && (isFinite(data16))){if(data16 < 0 || isNaN(data16)){validate32.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid8 = _errs46 === errors;}else {var valid8 = true;}}}}}}}}}else {validate32.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.transform !== undefined){let data17 = data.transform;const _errs49 = errors;const _errs50 = errors;if(errors === _errs50){if(typeof data17 === "string"){if(func8(data17) > 128){validate32.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data17) < 2){validate32.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate32.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs49 === errors;}else {var valid0 = true;}if(valid0){if(data.transformOrigin !== undefined){let data18 = data.transformOrigin;const _errs52 = errors;const _errs53 = errors;if(errors === _errs53){if(typeof data18 === "string"){if(func8(data18) > 128){validate32.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data18) < 2){validate32.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate32.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs52 === errors;}else {var valid0 = true;}if(valid0){if(data.width !== undefined){let data19 = data.width;const _errs55 = errors;const _errs56 = errors;if(errors === _errs56){if((typeof data19 == "number") && (isFinite(data19))){if(data19 < 0 || isNaN(data19)){validate32.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs55 === errors;}else {var valid0 = true;}if(valid0){if(data.x !== undefined){let data20 = data.x;const _errs58 = errors;const _errs59 = errors;if(errors === _errs59){if((typeof data20 == "number") && (isFinite(data20))){if(data20 < 0 || isNaN(data20)){validate32.errors = [{instancePath:instancePath+"/x",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/x",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs58 === errors;}else {var valid0 = true;}if(valid0){if(data.y !== undefined){let data21 = data.y;const _errs61 = errors;const _errs62 = errors;if(errors === _errs62){if((typeof data21 == "number") && (isFinite(data21))){if(data21 < 0 || isNaN(data21)){validate32.errors = [{instancePath:instancePath+"/y",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/y",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs61 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate32.errors = vErrors;return errors === 0;}const schema80 = {"additionalProperties":false,"properties":{"d":{"$ref":"#/definitions/ViewportPath"},"element":{"const":"path","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["d","element"],"type":"object"};const schema81 = {"description":"The \"d\" parameter of an svg path.","maxLength":1024,"minLength":2,"type":"string"};function validate34(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.d === undefined) && (missing0 = "d")) || ((data.element === undefined) && (missing0 = "element"))){validate34.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "d") || (key0 === "element")) || (key0 === "fill")) || (key0 === "opacity")) || (key0 === "stroke")) || (key0 === "transform")) || (key0 === "transformOrigin"))){validate34.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.d !== undefined){let data0 = data.d;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(typeof data0 === "string"){if(func8(data0) > 1024){validate34.errors = [{instancePath:instancePath+"/d",schemaPath:"#/definitions/ViewportPath/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func8(data0) < 2){validate34.errors = [{instancePath:instancePath+"/d",schemaPath:"#/definitions/ViewportPath/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/d",schemaPath:"#/definitions/ViewportPath/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.element !== undefined){let data1 = data.element;const _errs5 = errors;if(typeof data1 !== "string"){validate34.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("path" !== data1){validate34.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/const",keyword:"const",params:{allowedValue: "path"},message:"must be equal to constant"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.fill !== undefined){let data2 = data.fill;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs9 = errors;for(const key1 in data2){if(!(((key1 === "color") || (key1 === "opacity")) || (key1 === "rule"))){validate34.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data2.color !== undefined){let data3 = data2.color;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(typeof data3 === "string"){if(!pattern0.test(data3)){validate34.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate34.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.opacity !== undefined){let data4 = data2.opacity;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if((typeof data4 == "number") && (isFinite(data4))){if(data4 > 1 || isNaN(data4)){validate34.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data4 < 0 || isNaN(data4)){validate34.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data2.rule !== undefined){let data5 = data2.rule;const _errs16 = errors;if(typeof data5 !== "string"){validate34.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data5 === "nonzero") || (data5 === "evenodd"))){validate34.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/enum",keyword:"enum",params:{allowedValues: schema80.properties.fill.properties.rule.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}else {validate34.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.opacity !== undefined){let data6 = data.opacity;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if((typeof data6 == "number") && (isFinite(data6))){if(data6 > 1 || isNaN(data6)){validate34.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data6 < 0 || isNaN(data6)){validate34.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.stroke !== undefined){let data7 = data.stroke;const _errs21 = errors;if(errors === _errs21){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){const _errs23 = errors;for(const key2 in data7){if(!(((((((key2 === "color") || (key2 === "dasharray")) || (key2 === "dashoffset")) || (key2 === "linecap")) || (key2 === "linejoin")) || (key2 === "opacity")) || (key2 === "width"))){validate34.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs23 === errors){if(data7.color !== undefined){let data8 = data7.color;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(typeof data8 === "string"){if(!pattern0.test(data8)){validate34.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate34.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid6 = _errs24 === errors;}else {var valid6 = true;}if(valid6){if(data7.dasharray !== undefined){let data9 = data7.dasharray;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if(typeof data9 === "string"){if(!pattern2.test(data9)){validate34.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/pattern",keyword:"pattern",params:{pattern: "^([0-9]+\\s)+[0-9]+$"},message:"must match pattern \""+"^([0-9]+\\s)+[0-9]+$"+"\""}];return false;}}else {validate34.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid6 = _errs27 === errors;}else {var valid6 = true;}if(valid6){if(data7.dashoffset !== undefined){let data10 = data7.dashoffset;const _errs30 = errors;const _errs31 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate34.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs31){if((typeof data10 == "number") && (isFinite(data10))){if(data10 > 100 || isNaN(data10)){validate34.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/maximum",keyword:"maximum",params:{comparison: "<=", limit: 100},message:"must be <= 100"}];return false;}else {if(data10 < -100 || isNaN(data10)){validate34.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}}var valid6 = _errs30 === errors;}else {var valid6 = true;}if(valid6){if(data7.linecap !== undefined){let data11 = data7.linecap;const _errs33 = errors;if(typeof data11 !== "string"){validate34.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data11 === "butt") || (data11 === "square")) || (data11 === "round"))){validate34.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/enum",keyword:"enum",params:{allowedValues: schema80.properties.stroke.properties.linecap.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs33 === errors;}else {var valid6 = true;}if(valid6){if(data7.linejoin !== undefined){let data12 = data7.linejoin;const _errs35 = errors;if(typeof data12 !== "string"){validate34.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data12 === "miter") || (data12 === "round")) || (data12 === "bevel"))){validate34.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/enum",keyword:"enum",params:{allowedValues: schema80.properties.stroke.properties.linejoin.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs35 === errors;}else {var valid6 = true;}if(valid6){if(data7.opacity !== undefined){let data13 = data7.opacity;const _errs37 = errors;const _errs38 = errors;if(errors === _errs38){if((typeof data13 == "number") && (isFinite(data13))){if(data13 > 1 || isNaN(data13)){validate34.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data13 < 0 || isNaN(data13)){validate34.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid6 = _errs37 === errors;}else {var valid6 = true;}if(valid6){if(data7.width !== undefined){let data14 = data7.width;const _errs40 = errors;const _errs41 = errors;if(errors === _errs41){if((typeof data14 == "number") && (isFinite(data14))){if(data14 < 0 || isNaN(data14)){validate34.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate34.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid6 = _errs40 === errors;}else {var valid6 = true;}}}}}}}}}else {validate34.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.transform !== undefined){let data15 = data.transform;const _errs43 = errors;const _errs44 = errors;if(errors === _errs44){if(typeof data15 === "string"){if(func8(data15) > 128){validate34.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data15) < 2){validate34.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.transformOrigin !== undefined){let data16 = data.transformOrigin;const _errs46 = errors;const _errs47 = errors;if(errors === _errs47){if(typeof data16 === "string"){if(func8(data16) > 128){validate34.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data16) < 2){validate34.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate34.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs46 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate34.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate34.errors = vErrors;return errors === 0;}const schema92 = {"additionalProperties":false,"properties":{"element":{"const":"polygon","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"points":{"$ref":"#/definitions/ViewportCoordinatePairs"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["element","points"],"type":"object"};const schema96 = {"description":"A dash array in the form of \"2 3 4\"","pattern":"^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$","type":"string"};const pattern10 = new RegExp("^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$", "u");function validate36(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.element === undefined) && (missing0 = "element")) || ((data.points === undefined) && (missing0 = "points"))){validate36.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "element") || (key0 === "fill")) || (key0 === "opacity")) || (key0 === "points")) || (key0 === "stroke")) || (key0 === "transform")) || (key0 === "transformOrigin"))){validate36.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.element !== undefined){let data0 = data.element;const _errs2 = errors;if(typeof data0 !== "string"){validate36.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("polygon" !== data0){validate36.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/const",keyword:"const",params:{allowedValue: "polygon"},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fill !== undefined){let data1 = data.fill;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){const _errs6 = errors;for(const key1 in data1){if(!(((key1 === "color") || (key1 === "opacity")) || (key1 === "rule"))){validate36.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs6 === errors){if(data1.color !== undefined){let data2 = data1.color;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(typeof data2 === "string"){if(!pattern0.test(data2)){validate36.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate36.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data1.opacity !== undefined){let data3 = data1.opacity;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if((typeof data3 == "number") && (isFinite(data3))){if(data3 > 1 || isNaN(data3)){validate36.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data3 < 0 || isNaN(data3)){validate36.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate36.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data1.rule !== undefined){let data4 = data1.rule;const _errs13 = errors;if(typeof data4 !== "string"){validate36.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data4 === "nonzero") || (data4 === "evenodd"))){validate36.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/enum",keyword:"enum",params:{allowedValues: schema92.properties.fill.properties.rule.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs13 === errors;}else {var valid1 = true;}}}}}else {validate36.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.opacity !== undefined){let data5 = data.opacity;const _errs15 = errors;const _errs16 = errors;if(errors === _errs16){if((typeof data5 == "number") && (isFinite(data5))){if(data5 > 1 || isNaN(data5)){validate36.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data5 < 0 || isNaN(data5)){validate36.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate36.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.points !== undefined){let data6 = data.points;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if(typeof data6 === "string"){if(!pattern10.test(data6)){validate36.errors = [{instancePath:instancePath+"/points",schemaPath:"#/definitions/ViewportCoordinatePairs/pattern",keyword:"pattern",params:{pattern: "^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$"},message:"must match pattern \""+"^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$"+"\""}];return false;}}else {validate36.errors = [{instancePath:instancePath+"/points",schemaPath:"#/definitions/ViewportCoordinatePairs/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.stroke !== undefined){let data7 = data.stroke;const _errs21 = errors;if(errors === _errs21){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){const _errs23 = errors;for(const key2 in data7){if(!(((((((key2 === "color") || (key2 === "dasharray")) || (key2 === "dashoffset")) || (key2 === "linecap")) || (key2 === "linejoin")) || (key2 === "opacity")) || (key2 === "width"))){validate36.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs23 === errors){if(data7.color !== undefined){let data8 = data7.color;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(typeof data8 === "string"){if(!pattern0.test(data8)){validate36.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate36.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid6 = _errs24 === errors;}else {var valid6 = true;}if(valid6){if(data7.dasharray !== undefined){let data9 = data7.dasharray;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if(typeof data9 === "string"){if(!pattern2.test(data9)){validate36.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/pattern",keyword:"pattern",params:{pattern: "^([0-9]+\\s)+[0-9]+$"},message:"must match pattern \""+"^([0-9]+\\s)+[0-9]+$"+"\""}];return false;}}else {validate36.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid6 = _errs27 === errors;}else {var valid6 = true;}if(valid6){if(data7.dashoffset !== undefined){let data10 = data7.dashoffset;const _errs30 = errors;const _errs31 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate36.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs31){if((typeof data10 == "number") && (isFinite(data10))){if(data10 > 100 || isNaN(data10)){validate36.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/maximum",keyword:"maximum",params:{comparison: "<=", limit: 100},message:"must be <= 100"}];return false;}else {if(data10 < -100 || isNaN(data10)){validate36.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}}var valid6 = _errs30 === errors;}else {var valid6 = true;}if(valid6){if(data7.linecap !== undefined){let data11 = data7.linecap;const _errs33 = errors;if(typeof data11 !== "string"){validate36.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data11 === "butt") || (data11 === "square")) || (data11 === "round"))){validate36.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/enum",keyword:"enum",params:{allowedValues: schema92.properties.stroke.properties.linecap.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs33 === errors;}else {var valid6 = true;}if(valid6){if(data7.linejoin !== undefined){let data12 = data7.linejoin;const _errs35 = errors;if(typeof data12 !== "string"){validate36.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data12 === "miter") || (data12 === "round")) || (data12 === "bevel"))){validate36.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/enum",keyword:"enum",params:{allowedValues: schema92.properties.stroke.properties.linejoin.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs35 === errors;}else {var valid6 = true;}if(valid6){if(data7.opacity !== undefined){let data13 = data7.opacity;const _errs37 = errors;const _errs38 = errors;if(errors === _errs38){if((typeof data13 == "number") && (isFinite(data13))){if(data13 > 1 || isNaN(data13)){validate36.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data13 < 0 || isNaN(data13)){validate36.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate36.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid6 = _errs37 === errors;}else {var valid6 = true;}if(valid6){if(data7.width !== undefined){let data14 = data7.width;const _errs40 = errors;const _errs41 = errors;if(errors === _errs41){if((typeof data14 == "number") && (isFinite(data14))){if(data14 < 0 || isNaN(data14)){validate36.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate36.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid6 = _errs40 === errors;}else {var valid6 = true;}}}}}}}}}else {validate36.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.transform !== undefined){let data15 = data.transform;const _errs43 = errors;const _errs44 = errors;if(errors === _errs44){if(typeof data15 === "string"){if(func8(data15) > 128){validate36.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data15) < 2){validate36.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate36.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.transformOrigin !== undefined){let data16 = data.transformOrigin;const _errs46 = errors;const _errs47 = errors;if(errors === _errs47){if(typeof data16 === "string"){if(func8(data16) > 128){validate36.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data16) < 2){validate36.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate36.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs46 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate36.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate36.errors = vErrors;return errors === 0;}const schema104 = {"additionalProperties":false,"properties":{"element":{"const":"polyline","type":"string"},"fill":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"opacity":{"$ref":"#/definitions/Opacity"},"rule":{"enum":["nonzero","evenodd"],"type":"string"}},"type":"object"},"opacity":{"$ref":"#/definitions/Opacity"},"points":{"$ref":"#/definitions/ViewportCoordinatePairs"},"stroke":{"additionalProperties":false,"properties":{"color":{"$ref":"#/definitions/Color"},"dasharray":{"$ref":"#/definitions/DashArray"},"dashoffset":{"$ref":"#/definitions/DashOffset"},"linecap":{"enum":["butt","square","round"],"type":"string"},"linejoin":{"enum":["miter","round","bevel"],"type":"string"},"opacity":{"$ref":"#/definitions/Opacity"},"width":{"$ref":"#/definitions/ViewportCoordinate"}},"type":"object"},"transform":{"$ref":"#/definitions/Transform"},"transformOrigin":{"$ref":"#/definitions/TransformOrigin"}},"required":["element","points"],"type":"object"};function validate38(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.element === undefined) && (missing0 = "element")) || ((data.points === undefined) && (missing0 = "points"))){validate38.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "element") || (key0 === "fill")) || (key0 === "opacity")) || (key0 === "points")) || (key0 === "stroke")) || (key0 === "transform")) || (key0 === "transformOrigin"))){validate38.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.element !== undefined){let data0 = data.element;const _errs2 = errors;if(typeof data0 !== "string"){validate38.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("polyline" !== data0){validate38.errors = [{instancePath:instancePath+"/element",schemaPath:"#/properties/element/const",keyword:"const",params:{allowedValue: "polyline"},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.fill !== undefined){let data1 = data.fill;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){const _errs6 = errors;for(const key1 in data1){if(!(((key1 === "color") || (key1 === "opacity")) || (key1 === "rule"))){validate38.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs6 === errors){if(data1.color !== undefined){let data2 = data1.color;const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(typeof data2 === "string"){if(!pattern0.test(data2)){validate38.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate38.errors = [{instancePath:instancePath+"/fill/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data1.opacity !== undefined){let data3 = data1.opacity;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if((typeof data3 == "number") && (isFinite(data3))){if(data3 > 1 || isNaN(data3)){validate38.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data3 < 0 || isNaN(data3)){validate38.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate38.errors = [{instancePath:instancePath+"/fill/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data1.rule !== undefined){let data4 = data1.rule;const _errs13 = errors;if(typeof data4 !== "string"){validate38.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data4 === "nonzero") || (data4 === "evenodd"))){validate38.errors = [{instancePath:instancePath+"/fill/rule",schemaPath:"#/properties/fill/properties/rule/enum",keyword:"enum",params:{allowedValues: schema104.properties.fill.properties.rule.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs13 === errors;}else {var valid1 = true;}}}}}else {validate38.errors = [{instancePath:instancePath+"/fill",schemaPath:"#/properties/fill/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.opacity !== undefined){let data5 = data.opacity;const _errs15 = errors;const _errs16 = errors;if(errors === _errs16){if((typeof data5 == "number") && (isFinite(data5))){if(data5 > 1 || isNaN(data5)){validate38.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data5 < 0 || isNaN(data5)){validate38.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate38.errors = [{instancePath:instancePath+"/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.points !== undefined){let data6 = data.points;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if(typeof data6 === "string"){if(!pattern10.test(data6)){validate38.errors = [{instancePath:instancePath+"/points",schemaPath:"#/definitions/ViewportCoordinatePairs/pattern",keyword:"pattern",params:{pattern: "^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$"},message:"must match pattern \""+"^((-?[0-9]+),(-?[0-9]+)\\s)+(-?[0-9]+),(-?[0-9]+)$"+"\""}];return false;}}else {validate38.errors = [{instancePath:instancePath+"/points",schemaPath:"#/definitions/ViewportCoordinatePairs/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.stroke !== undefined){let data7 = data.stroke;const _errs21 = errors;if(errors === _errs21){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){const _errs23 = errors;for(const key2 in data7){if(!(((((((key2 === "color") || (key2 === "dasharray")) || (key2 === "dashoffset")) || (key2 === "linecap")) || (key2 === "linejoin")) || (key2 === "opacity")) || (key2 === "width"))){validate38.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs23 === errors){if(data7.color !== undefined){let data8 = data7.color;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(typeof data8 === "string"){if(!pattern0.test(data8)){validate38.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/pattern",keyword:"pattern",params:{pattern: "^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"},message:"must match pattern \""+"^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$"+"\""}];return false;}}else {validate38.errors = [{instancePath:instancePath+"/stroke/color",schemaPath:"#/definitions/Color/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid6 = _errs24 === errors;}else {var valid6 = true;}if(valid6){if(data7.dasharray !== undefined){let data9 = data7.dasharray;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if(typeof data9 === "string"){if(!pattern2.test(data9)){validate38.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/pattern",keyword:"pattern",params:{pattern: "^([0-9]+\\s)+[0-9]+$"},message:"must match pattern \""+"^([0-9]+\\s)+[0-9]+$"+"\""}];return false;}}else {validate38.errors = [{instancePath:instancePath+"/stroke/dasharray",schemaPath:"#/definitions/DashArray/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid6 = _errs27 === errors;}else {var valid6 = true;}if(valid6){if(data7.dashoffset !== undefined){let data10 = data7.dashoffset;const _errs30 = errors;const _errs31 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate38.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs31){if((typeof data10 == "number") && (isFinite(data10))){if(data10 > 100 || isNaN(data10)){validate38.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/maximum",keyword:"maximum",params:{comparison: "<=", limit: 100},message:"must be <= 100"}];return false;}else {if(data10 < -100 || isNaN(data10)){validate38.errors = [{instancePath:instancePath+"/stroke/dashoffset",schemaPath:"#/definitions/DashOffset/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}}var valid6 = _errs30 === errors;}else {var valid6 = true;}if(valid6){if(data7.linecap !== undefined){let data11 = data7.linecap;const _errs33 = errors;if(typeof data11 !== "string"){validate38.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data11 === "butt") || (data11 === "square")) || (data11 === "round"))){validate38.errors = [{instancePath:instancePath+"/stroke/linecap",schemaPath:"#/properties/stroke/properties/linecap/enum",keyword:"enum",params:{allowedValues: schema104.properties.stroke.properties.linecap.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs33 === errors;}else {var valid6 = true;}if(valid6){if(data7.linejoin !== undefined){let data12 = data7.linejoin;const _errs35 = errors;if(typeof data12 !== "string"){validate38.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data12 === "miter") || (data12 === "round")) || (data12 === "bevel"))){validate38.errors = [{instancePath:instancePath+"/stroke/linejoin",schemaPath:"#/properties/stroke/properties/linejoin/enum",keyword:"enum",params:{allowedValues: schema104.properties.stroke.properties.linejoin.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs35 === errors;}else {var valid6 = true;}if(valid6){if(data7.opacity !== undefined){let data13 = data7.opacity;const _errs37 = errors;const _errs38 = errors;if(errors === _errs38){if((typeof data13 == "number") && (isFinite(data13))){if(data13 > 1 || isNaN(data13)){validate38.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];return false;}else {if(data13 < 0 || isNaN(data13)){validate38.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}else {validate38.errors = [{instancePath:instancePath+"/stroke/opacity",schemaPath:"#/definitions/Opacity/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid6 = _errs37 === errors;}else {var valid6 = true;}if(valid6){if(data7.width !== undefined){let data14 = data7.width;const _errs40 = errors;const _errs41 = errors;if(errors === _errs41){if((typeof data14 == "number") && (isFinite(data14))){if(data14 < 0 || isNaN(data14)){validate38.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate38.errors = [{instancePath:instancePath+"/stroke/width",schemaPath:"#/definitions/ViewportCoordinate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid6 = _errs40 === errors;}else {var valid6 = true;}}}}}}}}}else {validate38.errors = [{instancePath:instancePath+"/stroke",schemaPath:"#/properties/stroke/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.transform !== undefined){let data15 = data.transform;const _errs43 = errors;const _errs44 = errors;if(errors === _errs44){if(typeof data15 === "string"){if(func8(data15) > 128){validate38.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data15) < 2){validate38.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate38.errors = [{instancePath:instancePath+"/transform",schemaPath:"#/definitions/Transform/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.transformOrigin !== undefined){let data16 = data.transformOrigin;const _errs46 = errors;const _errs47 = errors;if(errors === _errs47){if(typeof data16 === "string"){if(func8(data16) > 128){validate38.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/maxLength",keyword:"maxLength",params:{limit: 128},message:"must NOT have more than 128 characters"}];return false;}else {if(func8(data16) < 2){validate38.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate38.errors = [{instancePath:instancePath+"/transformOrigin",schemaPath:"#/definitions/TransformOrigin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs46 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate38.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate38.errors = vErrors;return errors === 0;}const pattern17 = new RegExp("^([0-9]+\\s){3}[0-9]+$", "u");function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((data.elements === undefined) && (missing0 = "elements")) || ((data.height === undefined) && (missing0 = "height"))) || ((data.left === undefined) && (missing0 = "left"))) || ((data.title === undefined) && (missing0 = "title"))) || ((data.top === undefined) && (missing0 = "top"))) || ((data.type === undefined) && (missing0 = "type"))) || ((data.viewBox === undefined) && (missing0 = "viewBox"))) || ((data.width === undefined) && (missing0 = "width"))){validate29.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func20.call(schema47.properties, key0))){validate29.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.blend !== undefined){let data0 = data.blend;const _errs2 = errors;if(typeof data0 !== "string"){validate29.errors = [{instancePath:instancePath+"/blend",schemaPath:"#/properties/blend/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((((((((((((data0 === "normal") || (data0 === "multiply")) || (data0 === "screen")) || (data0 === "overlay")) || (data0 === "darken")) || (data0 === "lighten")) || (data0 === "color-dodge")) || (data0 === "color-burn")) || (data0 === "hard-light")) || (data0 === "soft-light")) || (data0 === "difference")) || (data0 === "exclusion")) || (data0 === "hue")) || (data0 === "saturation")) || (data0 === "color")) || (data0 === "luminosity"))){validate29.errors = [{instancePath:instancePath+"/blend",schemaPath:"#/properties/blend/enum",keyword:"enum",params:{allowedValues: schema47.properties.blend.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.elements !== undefined){let data1 = data.elements;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;const _errs7 = errors;let valid2 = false;const _errs8 = errors;if(!(validate30(data2, {instancePath:instancePath+"/elements/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate30.errors : vErrors.concat(validate30.errors);errors = vErrors.length;}var _valid0 = _errs8 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs9 = errors;if(!(validate32(data2, {instancePath:instancePath+"/elements/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate32.errors : vErrors.concat(validate32.errors);errors = vErrors.length;}var _valid0 = _errs9 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs10 = errors;if(!(validate34(data2, {instancePath:instancePath+"/elements/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate34.errors : vErrors.concat(validate34.errors);errors = vErrors.length;}var _valid0 = _errs10 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs11 = errors;if(!(validate36(data2, {instancePath:instancePath+"/elements/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate36.errors : vErrors.concat(validate36.errors);errors = vErrors.length;}var _valid0 = _errs11 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs12 = errors;if(!(validate38(data2, {instancePath:instancePath+"/elements/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate38.errors : vErrors.concat(validate38.errors);errors = vErrors.length;}var _valid0 = _errs12 === errors;valid2 = valid2 || _valid0;}}}}if(!valid2){const err0 = {instancePath:instancePath+"/elements/" + i0,schemaPath:"#/properties/elements/items/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate29.errors = vErrors;return false;}else {errors = _errs7;if(vErrors !== null){if(_errs7){vErrors.length = _errs7;}else {vErrors = null;}}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate29.errors = [{instancePath:instancePath+"/elements",schemaPath:"#/properties/elements/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.height !== undefined){let data3 = data.height;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if((typeof data3 == "number") && (isFinite(data3))){if(data3 > 1000 || isNaN(data3)){validate29.errors = [{instancePath:instancePath+"/height",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data3 < -100 || isNaN(data3)){validate29.errors = [{instancePath:instancePath+"/height",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate29.errors = [{instancePath:instancePath+"/height",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.left !== undefined){let data4 = data.left;const _errs16 = errors;const _errs17 = errors;if(errors === _errs17){if((typeof data4 == "number") && (isFinite(data4))){if(data4 > 1000 || isNaN(data4)){validate29.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data4 < -100 || isNaN(data4)){validate29.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate29.errors = [{instancePath:instancePath+"/left",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){let data5 = data.title;const _errs19 = errors;if(errors === _errs19){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing1;if(((data5.text === undefined) && (missing1 = "text")) || ((data5.show === undefined) && (missing1 = "show"))){validate29.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs21 = errors;for(const key1 in data5){if(!((key1 === "show") || (key1 === "text"))){validate29.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs21 === errors){if(data5.show !== undefined){const _errs22 = errors;if(typeof data5.show !== "boolean"){validate29.errors = [{instancePath:instancePath+"/title/show",schemaPath:"#/properties/title/properties/show/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid5 = _errs22 === errors;}else {var valid5 = true;}if(valid5){if(data5.text !== undefined){let data7 = data5.text;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(typeof data7 === "string"){if(func8(data7) > 256){validate29.errors = [{instancePath:instancePath+"/title/text",schemaPath:"#/definitions/Title/maxLength",keyword:"maxLength",params:{limit: 256},message:"must NOT have more than 256 characters"}];return false;}else {if(func8(data7) < 2){validate29.errors = [{instancePath:instancePath+"/title/text",schemaPath:"#/definitions/Title/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}}else {validate29.errors = [{instancePath:instancePath+"/title/text",schemaPath:"#/definitions/Title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid5 = _errs24 === errors;}else {var valid5 = true;}}}}}else {validate29.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.top !== undefined){let data8 = data.top;const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if((typeof data8 == "number") && (isFinite(data8))){if(data8 > 1000 || isNaN(data8)){validate29.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data8 < -100 || isNaN(data8)){validate29.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate29.errors = [{instancePath:instancePath+"/top",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data9 = data.type;const _errs30 = errors;if(typeof data9 !== "string"){validate29.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("SHAPE" !== data9){validate29.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "SHAPE"},message:"must be equal to constant"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.viewBox !== undefined){let data10 = data.viewBox;const _errs32 = errors;const _errs33 = errors;if(errors === _errs33){if(typeof data10 === "string"){if(!pattern17.test(data10)){validate29.errors = [{instancePath:instancePath+"/viewBox",schemaPath:"#/definitions/ViewBox/pattern",keyword:"pattern",params:{pattern: "^([0-9]+\\s){3}[0-9]+$"},message:"must match pattern \""+"^([0-9]+\\s){3}[0-9]+$"+"\""}];return false;}}else {validate29.errors = [{instancePath:instancePath+"/viewBox",schemaPath:"#/definitions/ViewBox/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.width !== undefined){let data11 = data.width;const _errs35 = errors;const _errs36 = errors;if(errors === _errs36){if((typeof data11 == "number") && (isFinite(data11))){if(data11 > 1000 || isNaN(data11)){validate29.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/Percentage/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"}];return false;}else {if(data11 < -100 || isNaN(data11)){validate29.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/Percentage/minimum",keyword:"minimum",params:{comparison: ">=", limit: -100},message:"must be >= -100"}];return false;}}}else {validate29.errors = [{instancePath:instancePath+"/width",schemaPath:"#/definitions/Percentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs35 === errors;}else {var valid0 = true;}}}}}}}}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;const _errs1 = errors;if(!(validate23(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var _valid0 = _errs1 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs2 = errors;if(!(validate25(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate25.errors : vErrors.concat(validate25.errors);errors = vErrors.length;}var _valid0 = _errs2 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs3 = errors;if(!(validate27(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate27.errors : vErrors.concat(validate27.errors);errors = vErrors.length;}var _valid0 = _errs3 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs4 = errors;if(!(validate29(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var _valid0 = _errs4 === errors;valid0 = valid0 || _valid0;}}}if(!valid0){const err0 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate22.errors = vErrors;return false;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate22.errors = vErrors;return errors === 0;}function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.startTime === undefined) && (missing0 = "startTime")) || ((data.endTime === undefined) && (missing0 = "endTime"))) || ((data.id === undefined) && (missing0 = "id"))) || ((data.data === undefined) && (missing0 = "data"))){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((key0 === "data") || (key0 === "endTime")) || (key0 === "id")) || (key0 === "startTime")) || (key0 === "style"))){validate21.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.data !== undefined){const _errs2 = errors;if(!(validate22(data.data, {instancePath:instancePath+"/data",parentData:data,parentDataProperty:"data",rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.endTime !== undefined){let data1 = data.endTime;const _errs3 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate21.errors = [{instancePath:instancePath+"/endTime",schemaPath:"#/properties/endTime/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs5 = errors;if(typeof data.id !== "string"){validate21.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.startTime !== undefined){let data3 = data.startTime;const _errs7 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate21.errors = [{instancePath:instancePath+"/startTime",schemaPath:"#/properties/startTime/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.style !== undefined){let data4 = data.style;const _errs9 = errors;if(errors === _errs9){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){}else {validate21.errors = [{instancePath:instancePath+"/style",schemaPath:"#/properties/style/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}}}}}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.headers === undefined) && (missing0 = "headers")) || ((data.cues === undefined) && (missing0 = "cues"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.cues !== undefined){let data0 = data.cues;const _errs1 = errors;if(errors === _errs1){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs3 = errors;if(!(validate21(data0[i0], {instancePath:instancePath+"/cues/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid1 = _errs3 === errors;if(!valid1){break;}}}else {validate20.errors = [{instancePath:instancePath+"/cues",schemaPath:"#/properties/cues/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.files !== undefined){let data2 = data.files;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data2)){var valid2 = true;const len1 = data2.length;for(let i1=0; i1<len1; i1++){const _errs6 = errors;if(typeof data2[i1] !== "string"){validate20.errors = [{instancePath:instancePath+"/files/" + i1,schemaPath:"#/properties/files/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;if(!valid2){break;}}}else {validate20.errors = [{instancePath:instancePath+"/files",schemaPath:"#/properties/files/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.headers !== undefined){let data4 = data.headers;const _errs8 = errors;if(errors === _errs8){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing1;if((((((((data4._id === undefined) && (missing1 = "_id")) || ((data4._rev === undefined) && (missing1 = "_rev"))) || ((data4.created === undefined) && (missing1 = "created"))) || ((data4.for === undefined) && (missing1 = "for"))) || ((data4.title === undefined) && (missing1 = "title"))) || ((data4.type === undefined) && (missing1 = "type"))) || ((data4.xpath === undefined) && (missing1 = "xpath"))){validate20.errors = [{instancePath:instancePath+"/headers",schemaPath:"#/properties/headers/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs10 = errors;for(const key0 in data4){if(!(func20.call(schema22.properties.headers.properties, key0))){const _errs11 = errors;const _errs12 = errors;let valid4 = false;const _errs13 = errors;const err0 = {instancePath:instancePath+"/headers/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/headers/additionalProperties/anyOf/0/not",keyword:"not",params:{},message:"must NOT be valid"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;var _valid0 = _errs13 === errors;valid4 = valid4 || _valid0;if(!valid4){const _errs15 = errors;if(typeof data4[key0] !== "string"){const err1 = {instancePath:instancePath+"/headers/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/headers/additionalProperties/anyOf/1/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}var _valid0 = _errs15 === errors;valid4 = valid4 || _valid0;}if(!valid4){const err2 = {instancePath:instancePath+"/headers/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/headers/additionalProperties/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate20.errors = vErrors;return false;}else {errors = _errs12;if(vErrors !== null){if(_errs12){vErrors.length = _errs12;}else {vErrors = null;}}}var valid3 = _errs11 === errors;if(!valid3){break;}}}if(_errs10 === errors){if(data4._id !== undefined){const _errs17 = errors;if(typeof data4._id !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/_id",schemaPath:"#/definitions/PouchDB.Core.DocumentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs17 === errors;}else {var valid5 = true;}if(valid5){if(data4._rev !== undefined){const _errs20 = errors;if(typeof data4._rev !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/_rev",schemaPath:"#/definitions/PouchDB.Core.RevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs20 === errors;}else {var valid5 = true;}if(valid5){if(data4.authors !== undefined){const _errs23 = errors;if(typeof data4.authors !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/authors",schemaPath:"#/properties/headers/properties/authors/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs23 === errors;}else {var valid5 = true;}if(valid5){if(data4.created !== undefined){const _errs25 = errors;if(typeof data4.created !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/created",schemaPath:"#/properties/headers/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs25 === errors;}else {var valid5 = true;}if(valid5){if(data4.duration !== undefined){const _errs27 = errors;if(typeof data4.duration !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/duration",schemaPath:"#/properties/headers/properties/duration/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs27 === errors;}else {var valid5 = true;}if(valid5){if(data4.for !== undefined){const _errs29 = errors;if(typeof data4.for !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/for",schemaPath:"#/properties/headers/properties/for/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs29 === errors;}else {var valid5 = true;}if(valid5){if(data4.frameOrigin !== undefined){const _errs31 = errors;if(typeof data4.frameOrigin !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/frameOrigin",schemaPath:"#/properties/headers/properties/frameOrigin/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs31 === errors;}else {var valid5 = true;}if(valid5){if(data4.framePath !== undefined){const _errs33 = errors;if(typeof data4.framePath !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/framePath",schemaPath:"#/properties/headers/properties/framePath/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs33 === errors;}else {var valid5 = true;}if(valid5){if(data4.frameSearch !== undefined){const _errs35 = errors;if(typeof data4.frameSearch !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/frameSearch",schemaPath:"#/properties/headers/properties/frameSearch/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs35 === errors;}else {var valid5 = true;}if(valid5){if(data4.frameTitle !== undefined){const _errs37 = errors;if(typeof data4.frameTitle !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/frameTitle",schemaPath:"#/properties/headers/properties/frameTitle/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs37 === errors;}else {var valid5 = true;}if(valid5){if(data4.language !== undefined){const _errs39 = errors;if(typeof data4.language !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/language",schemaPath:"#/properties/headers/properties/language/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs39 === errors;}else {var valid5 = true;}if(valid5){if(data4.license !== undefined){const _errs41 = errors;if(typeof data4.license !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/license",schemaPath:"#/properties/headers/properties/license/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs41 === errors;}else {var valid5 = true;}if(valid5){if(data4.thumbnail !== undefined){const _errs43 = errors;if(typeof data4.thumbnail !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/thumbnail",schemaPath:"#/properties/headers/properties/thumbnail/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs43 === errors;}else {var valid5 = true;}if(valid5){if(data4.title !== undefined){const _errs45 = errors;if(typeof data4.title !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/title",schemaPath:"#/properties/headers/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs45 === errors;}else {var valid5 = true;}if(valid5){if(data4.type !== undefined){let data20 = data4.type;const _errs47 = errors;if(typeof data20 !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/type",schemaPath:"#/properties/headers/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if("plopdown_v2" !== data20){validate20.errors = [{instancePath:instancePath+"/headers/type",schemaPath:"#/properties/headers/properties/type/const",keyword:"const",params:{allowedValue: "plopdown_v2"},message:"must be equal to constant"}];return false;}var valid5 = _errs47 === errors;}else {var valid5 = true;}if(valid5){if(data4.updated !== undefined){const _errs49 = errors;if(typeof data4.updated !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/updated",schemaPath:"#/properties/headers/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs49 === errors;}else {var valid5 = true;}if(valid5){if(data4.url !== undefined){const _errs51 = errors;if(typeof data4.url !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/url",schemaPath:"#/properties/headers/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs51 === errors;}else {var valid5 = true;}if(valid5){if(data4.xpath !== undefined){const _errs53 = errors;if(typeof data4.xpath !== "string"){validate20.errors = [{instancePath:instancePath+"/headers/xpath",schemaPath:"#/properties/headers/properties/xpath/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs53 === errors;}else {var valid5 = true;}}}}}}}}}}}}}}}}}}}}}else {validate20.errors = [{instancePath:instancePath+"/headers",schemaPath:"#/properties/headers/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}